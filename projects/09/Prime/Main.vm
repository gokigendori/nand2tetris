function Main.main 0
label WHILE_TOP_0
push constant 1
neg
not
if-goto WHILE_END_0
call Main.question 0
pop temp 0
goto WHILE_TOP_0
label WHILE_END_0
push constant 0
return
function Main.question 1
push constant 15
call String.new 1
push constant 87
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 63
call String.appendChar 2
call Keyboard.readInt 1
pop local 0
push local 0
call Main.isPrime 1
push constant 1
neg
eq
if-goto IF_TRUE_0
goto IF_FALSE_0
label IF_TRUE_0
push constant 21
call String.new 1
push constant 73
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
goto IF_END_0
label IF_FALSE_0
label IF_END_0
push constant 25
call String.new 1
push constant 73
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Main.isPrime 1
push argument 0
push constant 2
eq
if-goto IF_TRUE_0
goto IF_FALSE_0
label IF_TRUE_0
push constant 1
neg
return
goto IF_END_0
label IF_FALSE_0
label IF_END_0
push argument 0
push constant 2
lt
push argument 0
push constant 2
call Main.isModZero 2
push constant 1
neg
eq
or
if-goto IF_TRUE_1
goto IF_FALSE_1
label IF_TRUE_1
push constant 0
return
goto IF_END_1
label IF_FALSE_1
label IF_END_1
push constant 3
pop local 0
label WHILE_TOP_0
push local 0
push local 0
call Math.multiply 2
push argument 0
lt
push local 0
push local 0
call Math.multiply 2
or
push argument 0
eq
not
if-goto WHILE_END_0
push argument 0
push local 0
call Main.isModZero 2
push constant 1
neg
eq
if-goto IF_TRUE_2
goto IF_FALSE_2
label IF_TRUE_2
push constant 0
return
goto IF_END_2
label IF_FALSE_2
label IF_END_2
push local 0
push constant 2
add
pop local 0
goto WHILE_TOP_0
label WHILE_END_0
push constant 1
neg
return
function Main.isModZero 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
push argument 0
eq
if-goto IF_TRUE_0
goto IF_FALSE_0
label IF_TRUE_0
push constant 1
neg
return
goto IF_END_0
label IF_FALSE_0
label IF_END_0
push constant 0
return