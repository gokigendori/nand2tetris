// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    static Array bitArray;

    /** Initializes the library. */
    function void init() {
        let bitArray = Array.new(16);
        return;
    }

    function void createBitArray(int x){
        var int base,i;
        let i = 0;
        let base = 1;
        while (i<16) {
            if(~((x & base) = 0)){
                let bitArray[i] = true;
            }else{
                let bitArray[i] = false;
            }
            let base = base + base;
            let i = i + 1;
        }
        return;
    }

    function boolean bit(int x){
        if(x < 16) {
            return bitArray[x];
        }
        return false;
    }
    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x<0) {
            let x = -x;
        }
        return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum,base,i;
        let sum = 0;
        let base = x;
        let i = 0;
        do Math.createBitArray(y);
        while (i<16) {
            if(Math.bit(i) = true){
                let sum = sum  + base;
            }
            let base = base + base;
            let i = i + 1;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int xx, int yy) {
        var int q,x,y,ans;
        let x = Math.abs(xx);
        let y = Math.abs(yy);

        if ( x<y ) {
            return 0;
        }
        let q = Math.divide(x, y + y);
        if( (x - Math.multiply(y+y,q)) < y ){
            let ans =  q + q;
        }else{
            let ans =  q + q + 1;
        }
        if( ((xx<0) & (yy<0))| ((xx>0) & (yy>0)) ){
            return ans;
        }
        return -ans;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y,i,j;
        let j = 256; // 2^8
        let i = 8;
        while(~(i<0)){

            if( 
                ( ~(Math.multiply(y+j,y+j) > x) ) & 
                ( Math.multiply(y+j,y+j) > 0 ) 
                ) {
                let y = y + j;
            }
            let j = Math.divide(j,2);
            let i = i - 1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if( a < b ){
            return b;
        }
        return a;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if(a < b){
            return a;
        }
        return b;
    }
}
